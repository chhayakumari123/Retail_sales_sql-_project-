
-- SQL RETAIL SALES ANALYIS ;
create database retail_sales;


CREATE TABLE sales (
    transation_id INT PRIMARY KEY,
    sale_date DATE,
    sale_time TIME,
    customer_id INT,
    gender VARCHAR(15),
    age INT,
    category VARCHAR(15),
    quantity INT,
    price_per_unit FLOAT,
    cogs FLOAT,
    total_sale FLOAT
);
SELECT 
    *
FROM
    retail_sales.sales
LIMIT 10;

SELECT 
    COUNT(*)
FROM
    retail_sales.sales;
    
-- Data Cleaning ;
SELECT 
    *
FROM
    retail_sales.sales
WHERE
    transactions_id IS NULL;

SELECT 
    *
FROM
    retail_sales.sales
WHERE
    sale_date IS NULL;

SELECT 
    *
FROM
    retail_sales.sales
WHERE
    sale_time IS NULL;

SELECT 
    *
FROM
    retail_sales.sales
WHERE
    transactions_id IS NULL
        OR sale_date IS NULL
        OR sale_time IS NULL
        OR gender IS NULL
        OR category IS NULL
        OR quantity IS NULL
        OR cogs IS NULL
        OR total_sales IS NULL;
    
DELETE FROM retail_sales.sales 
WHERE
    transactions_id IS NULL
    OR sale_date IS NULL
    OR sale_time IS NULL
    OR gender IS NULL
    OR category IS NULL
    OR quantity IS NULL
    OR cogs IS NULL
    OR total_sales;
    
 -- Data Exploration;
SELECT 
    COUNT(*) AS total_sales
FROM
    retail_sales.sales;
    
-- How many unicque customers we have?
SELECT 
    COUNT(DISTINCT customer_id) AS total_sales
FROM
    retail_sales.sales;
    
SELECT 
    COUNT(DISTINCT category)
FROM
    retail_sales.sales;
    

-- Q.1 Write a SQL query to retrieve all columns for sales made on '2022-11-05 
SELECT 
    *
FROM
    retail_sales.sales
WHERE
    sale_date = '2022-11-05';
    
-- Q.2 Write a SQL query to retrieve all transactions where the category is 'Clothing' and the quantity sold is more than 4 in the month of Nov-2022    
 
SELECT 
    *
FROM
    retail_sales.sales
WHERE
    category = 'Clothing'
        AND TO_CHAR(sale_date, 'yyy-mm') = '2022-11'
        AND quantity >= 4;
    
-- Q.3 Write a SQL query to calculate the total sales (total_sale) for each category.
SELECT 
    category,
    SUM(total_sales) AS net_sale,
    COUNT(*) AS total_order
FROM
    retail_sales.sales
GROUP BY 1;

-- Q.4 Write a SQL query to find the average age of customers who purchased items from the 'Beauty' category.
SELECT 
    ROUND(AVG(age), 2) AS average_age
FROM
    retail_sales.sales
WHERE
    category = 'Beauty';
    
-- Q.5 Write a SQL query to find all transactions where the total_sale is greater than 1000.    

SELECT 
    *
FROM
    retail_sales.sales
WHERE
    total_sales > 1000;
    
 -- Q.6 Write a SQL query to find the total number of transactions (transaction_id) made by each gender in each category.   

SELECT 
    category, gender, COUNT(*) AS totals_transactions
FROM
    retail_sales.sales
GROUP BY category , gender
ORDER BY 1;

-- Q.7 Write a SQL query to calculate the average sale for each month. Find out best selling month in each year.
select
month,
year,
avg_sale
from
(
SELECT 
    extract(YEAR FROM sale_date) AS year,
 extract(MONTH FROM sale_date) AS month,
    AVG(total_sales) AS avg_sale,
    rank() over(partition by EXTRACT(YEAR FROM sale_date) order by avg(total_sales)desc) as r
FROM
    retail_sales.sales
GROUP BY 1 , 2
) as t1
ORDER BY 1 , 2 , 3 DESC;

-- Q.8 Write a SQL query to find the top 5 customers based on the highest total sales 
SELECT 
    customer_id, SUM(total_sales) AS total_sales
FROM
    retail_sales.sales
GROUP BY 1
ORDER BY 1 , 2 DESC
LIMIT 5;

-- Q.9 Write a SQL query to find the number of unique customers who purchased items from each category.
SELECT 
    category, COUNT(DISTINCT customer_id) AS unic_customer_count
FROM
    retail_sales.sales
GROUP BY 1
ORDER BY 2 DESC;

-- Q.10 Write a SQL query to create each shift and number of orders (Example Morning <=12, Afternoon Between 12 & 17, Evening >17)
with hourly_sale
as
(
SELECT 
    *,
    CASE
        WHEN EXTRACT(HOUR FROM sale_date) < 12 THEN 'Morning'
        WHEN EXTRACT(HOUR FROM sale_date) BETWEEN 12 AND 17 THEN 'Afternoon'
        ELSE 'Evening'
    END AS shift
FROM
    retail_sales.sales
)
SELECT 
    shift, COUNT(*) AS total_orders
FROM
    hourly_sale
GROUP BY shift;

-- End  of project;